// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gtfs-realtime.proto

package sen.khyber.subway.client.proto;

public interface TripDescriptorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:transit_realtime.TripDescriptor)
    com.google.protobuf.GeneratedMessageV3.
        ExtendableMessageOrBuilder<TripDescriptor> {

  /**
   * <pre>
   * The trip_id from the GTFS feed that this selector refers to.
   * For non frequency expanded trips, this field is enough to uniquely identify
   * the trip. For frequency expanded, start_time and start_date might also be
   * necessary.
   * </pre>
   *
   * <code>optional string trip_id = 1;</code>
   */
  boolean hasTripId();
  /**
   * <pre>
   * The trip_id from the GTFS feed that this selector refers to.
   * For non frequency expanded trips, this field is enough to uniquely identify
   * the trip. For frequency expanded, start_time and start_date might also be
   * necessary.
   * </pre>
   *
   * <code>optional string trip_id = 1;</code>
   */
  java.lang.String getTripId();
  /**
   * <pre>
   * The trip_id from the GTFS feed that this selector refers to.
   * For non frequency expanded trips, this field is enough to uniquely identify
   * the trip. For frequency expanded, start_time and start_date might also be
   * necessary.
   * </pre>
   *
   * <code>optional string trip_id = 1;</code>
   */
  com.google.protobuf.ByteString
      getTripIdBytes();

  /**
   * <pre>
   * The route_id from the GTFS that this selector refers to.
   * </pre>
   *
   * <code>optional string route_id = 5;</code>
   */
  boolean hasRouteId();
  /**
   * <pre>
   * The route_id from the GTFS that this selector refers to.
   * </pre>
   *
   * <code>optional string route_id = 5;</code>
   */
  java.lang.String getRouteId();
  /**
   * <pre>
   * The route_id from the GTFS that this selector refers to.
   * </pre>
   *
   * <code>optional string route_id = 5;</code>
   */
  com.google.protobuf.ByteString
      getRouteIdBytes();

  /**
   * <pre>
   * The scheduled start time of this trip instance.
   * This field should be given only if the trip is frequency-expanded in the
   * GTFS feed. The value must precisely correspond to start_time specified for
   * the route in the GTFS feed plus some multiple of headway_secs.
   * Format of the field is same as that of GTFS/frequencies.txt/start_time,
   * e.g., 11:15:35 or 25:15:35.
   * </pre>
   *
   * <code>optional string start_time = 2;</code>
   */
  boolean hasStartTime();
  /**
   * <pre>
   * The scheduled start time of this trip instance.
   * This field should be given only if the trip is frequency-expanded in the
   * GTFS feed. The value must precisely correspond to start_time specified for
   * the route in the GTFS feed plus some multiple of headway_secs.
   * Format of the field is same as that of GTFS/frequencies.txt/start_time,
   * e.g., 11:15:35 or 25:15:35.
   * </pre>
   *
   * <code>optional string start_time = 2;</code>
   */
  java.lang.String getStartTime();
  /**
   * <pre>
   * The scheduled start time of this trip instance.
   * This field should be given only if the trip is frequency-expanded in the
   * GTFS feed. The value must precisely correspond to start_time specified for
   * the route in the GTFS feed plus some multiple of headway_secs.
   * Format of the field is same as that of GTFS/frequencies.txt/start_time,
   * e.g., 11:15:35 or 25:15:35.
   * </pre>
   *
   * <code>optional string start_time = 2;</code>
   */
  com.google.protobuf.ByteString
      getStartTimeBytes();

  /**
   * <pre>
   * The scheduled start date of this trip instance.
   * Must be provided to disambiguate trips that are so late as to collide with
   * a scheduled trip on a next day. For example, for a train that departs 8:00
   * and 20:00 every day, and is 12 hours late, there would be two distinct
   * trips on the same time.
   * This field can be provided but is not mandatory for schedules in which such
   * collisions are impossible - for example, a service running on hourly
   * schedule where a vehicle that is one hour late is not considered to be
   * related to schedule anymore.
   * In YYYYMMDD format.
   * </pre>
   *
   * <code>optional string start_date = 3;</code>
   */
  boolean hasStartDate();
  /**
   * <pre>
   * The scheduled start date of this trip instance.
   * Must be provided to disambiguate trips that are so late as to collide with
   * a scheduled trip on a next day. For example, for a train that departs 8:00
   * and 20:00 every day, and is 12 hours late, there would be two distinct
   * trips on the same time.
   * This field can be provided but is not mandatory for schedules in which such
   * collisions are impossible - for example, a service running on hourly
   * schedule where a vehicle that is one hour late is not considered to be
   * related to schedule anymore.
   * In YYYYMMDD format.
   * </pre>
   *
   * <code>optional string start_date = 3;</code>
   */
  java.lang.String getStartDate();
  /**
   * <pre>
   * The scheduled start date of this trip instance.
   * Must be provided to disambiguate trips that are so late as to collide with
   * a scheduled trip on a next day. For example, for a train that departs 8:00
   * and 20:00 every day, and is 12 hours late, there would be two distinct
   * trips on the same time.
   * This field can be provided but is not mandatory for schedules in which such
   * collisions are impossible - for example, a service running on hourly
   * schedule where a vehicle that is one hour late is not considered to be
   * related to schedule anymore.
   * In YYYYMMDD format.
   * </pre>
   *
   * <code>optional string start_date = 3;</code>
   */
  com.google.protobuf.ByteString
      getStartDateBytes();

  /**
   * <code>optional .transit_realtime.TripDescriptor.ScheduleRelationship schedule_relationship = 4;</code>
   */
  boolean hasScheduleRelationship();
  /**
   * <code>optional .transit_realtime.TripDescriptor.ScheduleRelationship schedule_relationship = 4;</code>
   */
  sen.khyber.subway.client.proto.TripDescriptor.ScheduleRelationship getScheduleRelationship();
}
