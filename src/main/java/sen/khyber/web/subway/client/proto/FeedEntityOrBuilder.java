// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gtfs-realtime.proto

package sen.khyber.web.subway.client.proto;

public interface FeedEntityOrBuilder extends
        // @@protoc_insertion_point(interface_extends:transit_realtime.FeedEntity)
        com.google.protobuf.MessageOrBuilder {
    
    /**
     * <pre>
     * The ids are used only to provide incrementality support. The id should be
     * unique within a FeedMessage. Consequent FeedMessages may contain
     * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
     * FeedEntity with some id will replace the old FeedEntity with the same id
     * (or delete it - see is_deleted below).
     * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
     * feed must be specified by explicit selectors (see EntitySelector below for
     * more info).
     * </pre>
     * <p>
     * <code>required string id = 1;</code>
     */
    boolean hasId();
    
    /**
     * <pre>
     * The ids are used only to provide incrementality support. The id should be
     * unique within a FeedMessage. Consequent FeedMessages may contain
     * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
     * FeedEntity with some id will replace the old FeedEntity with the same id
     * (or delete it - see is_deleted below).
     * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
     * feed must be specified by explicit selectors (see EntitySelector below for
     * more info).
     * </pre>
     * <p>
     * <code>required string id = 1;</code>
     */
    java.lang.String getId();
    
    /**
     * <pre>
     * The ids are used only to provide incrementality support. The id should be
     * unique within a FeedMessage. Consequent FeedMessages may contain
     * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
     * FeedEntity with some id will replace the old FeedEntity with the same id
     * (or delete it - see is_deleted below).
     * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
     * feed must be specified by explicit selectors (see EntitySelector below for
     * more info).
     * </pre>
     * <p>
     * <code>required string id = 1;</code>
     */
    com.google.protobuf.ByteString
    getIdBytes();
    
    /**
     * <pre>
     * Whether this entity is to be deleted. Relevant only for incremental
     * fetches.
     * </pre>
     * <p>
     * <code>optional bool is_deleted = 2 [default = false];</code>
     */
    boolean hasIsDeleted();
    
    /**
     * <pre>
     * Whether this entity is to be deleted. Relevant only for incremental
     * fetches.
     * </pre>
     * <p>
     * <code>optional bool is_deleted = 2 [default = false];</code>
     */
    boolean getIsDeleted();
    
    /**
     * <pre>
     * Data about the entity itself. Exactly one of the following fields must be
     * present (unless the entity is being deleted).
     * </pre>
     * <p>
     * <code>optional .transit_realtime.TripUpdate trip_update = 3;</code>
     */
    boolean hasTripUpdate();
    
    /**
     * <pre>
     * Data about the entity itself. Exactly one of the following fields must be
     * present (unless the entity is being deleted).
     * </pre>
     * <p>
     * <code>optional .transit_realtime.TripUpdate trip_update = 3;</code>
     */
    TripUpdate getTripUpdate();
    
    /**
     * <pre>
     * Data about the entity itself. Exactly one of the following fields must be
     * present (unless the entity is being deleted).
     * </pre>
     * <p>
     * <code>optional .transit_realtime.TripUpdate trip_update = 3;</code>
     */
    TripUpdateOrBuilder getTripUpdateOrBuilder();
    
    /**
     * <code>optional .transit_realtime.VehiclePosition vehicle = 4;</code>
     */
    boolean hasVehicle();
    
    /**
     * <code>optional .transit_realtime.VehiclePosition vehicle = 4;</code>
     */
    VehiclePosition getVehicle();
    
    /**
     * <code>optional .transit_realtime.VehiclePosition vehicle = 4;</code>
     */
    VehiclePositionOrBuilder getVehicleOrBuilder();
    
    /**
     * <code>optional .transit_realtime.Alert alert = 5;</code>
     */
    boolean hasAlert();
    
    /**
     * <code>optional .transit_realtime.Alert alert = 5;</code>
     */
    Alert getAlert();
    
    /**
     * <code>optional .transit_realtime.Alert alert = 5;</code>
     */
    AlertOrBuilder getAlertOrBuilder();
}
