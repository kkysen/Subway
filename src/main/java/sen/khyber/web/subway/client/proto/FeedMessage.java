// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gtfs-realtime.proto

package sen.khyber.web.subway.client.proto;

/**
 * <pre>
 * The contents of a feed message.
 * A feed is a continuous stream of feed messages. Each message in the stream is
 * obtained as a response to an appropriate HTTP GET request.
 * A realtime feed is always defined with relation to an existing GTFS feed.
 * All the entity ids are resolved with respect to the GTFS feed.
 * A feed depends on some external configuration:
 * - The corresponding GTFS feed.
 * - Feed application (updates, positions or alerts). A feed should contain only
 *   items of one specified application; all the other entities will be ignored.
 * - Polling frequency
 * </pre>
 * <p>
 * Protobuf type {@code transit_realtime.FeedMessage}
 */
public final class FeedMessage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:transit_realtime.FeedMessage)
        FeedMessageOrBuilder {
    
    private static final long serialVersionUID = 0L;
    
    // Use FeedMessage.newBuilder() to construct.
    private FeedMessage(final com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }
    
    private FeedMessage() {
        entity_ = java.util.Collections.emptyList();
    }
    
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
        return unknownFields;
    }
    
    private FeedMessage(
            final com.google.protobuf.CodedInputStream input,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        final com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
            boolean done = false;
            while (!done) {
                final int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    default: {
                        if (!parseUnknownField(
                                input, unknownFields, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                    case 10: {
                        FeedHeader.Builder subBuilder = null;
                        if (((bitField0_ & 0x00000001) == 0x00000001)) {
                            subBuilder = header_.toBuilder();
                        }
                        header_ = input.readMessage(FeedHeader.PARSER, extensionRegistry);
                        if (subBuilder != null) {
                            subBuilder.mergeFrom(header_);
                            header_ = subBuilder.buildPartial();
                        }
                        bitField0_ |= 0x00000001;
                        break;
                    }
                    case 18: {
                        if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                            entity_ = new java.util.ArrayList<>();
                            mutable_bitField0_ |= 0x00000002;
                        }
                        entity_.add(
                                input.readMessage(FeedEntity.PARSER, extensionRegistry));
                        break;
                    }
                }
            }
        } catch (final com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (final java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
        } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                entity_ = java.util.Collections.unmodifiableList(entity_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
        }
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
        return GtfsRealtime.internal_static_transit_realtime_FeedMessage_descriptor;
    }
    
    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
        return GtfsRealtime.internal_static_transit_realtime_FeedMessage_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        FeedMessage.class, FeedMessage.Builder.class);
    }
    
    private int bitField0_;
    public static final int HEADER_FIELD_NUMBER = 1;
    private FeedHeader header_;
    
    /**
     * <pre>
     * Metadata about this feed and feed message.
     * </pre>
     * <p>
     * <code>required .transit_realtime.FeedHeader header = 1;</code>
     */
    @Override
    public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <pre>
     * Metadata about this feed and feed message.
     * </pre>
     * <p>
     * <code>required .transit_realtime.FeedHeader header = 1;</code>
     */
    @Override
    public FeedHeader getHeader() {
        return header_ == null ? FeedHeader.getDefaultInstance() : header_;
    }
    
    /**
     * <pre>
     * Metadata about this feed and feed message.
     * </pre>
     * <p>
     * <code>required .transit_realtime.FeedHeader header = 1;</code>
     */
    @Override
    public FeedHeaderOrBuilder getHeaderOrBuilder() {
        return header_ == null ? FeedHeader.getDefaultInstance() : header_;
    }
    
    public static final int ENTITY_FIELD_NUMBER = 2;
    private java.util.List<FeedEntity> entity_;
    
    /**
     * <pre>
     * Contents of the feed.
     * </pre>
     * <p>
     * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
     */
    @Override
    public java.util.List<FeedEntity> getEntityList() {
        return entity_;
    }
    
    /**
     * <pre>
     * Contents of the feed.
     * </pre>
     * <p>
     * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
     */
    @Override
    public java.util.List<? extends FeedEntityOrBuilder>
    getEntityOrBuilderList() {
        return entity_;
    }
    
    /**
     * <pre>
     * Contents of the feed.
     * </pre>
     * <p>
     * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
     */
    @Override
    public int getEntityCount() {
        return entity_.size();
    }
    
    /**
     * <pre>
     * Contents of the feed.
     * </pre>
     * <p>
     * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
     */
    @Override
    public FeedEntity getEntity(final int index) {
        return entity_.get(index);
    }
    
    /**
     * <pre>
     * Contents of the feed.
     * </pre>
     * <p>
     * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
     */
    @Override
    public FeedEntityOrBuilder getEntityOrBuilder(
            final int index) {
        return entity_.get(index);
    }
    
    private byte memoizedIsInitialized = -1;
    
    @Override
    public final boolean isInitialized() {
        final byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) {return true;}
        if (isInitialized == 0) {return false;}
        
        if (!hasHeader()) {
            memoizedIsInitialized = 0;
            return false;
        }
        if (!getHeader().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
        }
        for (int i = 0; i < getEntityCount(); i++) {
            if (!getEntity(i).isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
        }
        memoizedIsInitialized = 1;
        return true;
    }
    
    @Override
    public void writeTo(final com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeMessage(1, getHeader());
        }
        for (int i = 0; i < entity_.size(); i++) {
            output.writeMessage(2, entity_.get(i));
        }
        unknownFields.writeTo(output);
    }
    
    @Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) {return size;}
        
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(1, getHeader());
        }
        for (int i = 0; i < entity_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(2, entity_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
    }
    
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof FeedMessage)) {
            return super.equals(obj);
        }
        final FeedMessage other = (FeedMessage) obj;
        
        boolean result = true;
        result = result && (hasHeader() == other.hasHeader());
        if (hasHeader()) {
            result = result && getHeader()
                    .equals(other.getHeader());
        }
        result = result && getEntityList()
                .equals(other.getEntityList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
    }
    
    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasHeader()) {
            hash = (37 * hash) + HEADER_FIELD_NUMBER;
            hash = (53 * hash) + getHeader().hashCode();
        }
        if (getEntityCount() > 0) {
            hash = (37 * hash) + ENTITY_FIELD_NUMBER;
            hash = (53 * hash) + getEntityList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }
    
    public static FeedMessage parseFrom(
            final java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }
    
    public static FeedMessage parseFrom(
            final java.nio.ByteBuffer data,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }
    
    public static FeedMessage parseFrom(
            final com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }
    
    public static FeedMessage parseFrom(
            final com.google.protobuf.ByteString data,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }
    
    public static FeedMessage parseFrom(final byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }
    
    public static FeedMessage parseFrom(
            final byte[] data,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }
    
    public static FeedMessage parseFrom(final java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }
    
    public static FeedMessage parseFrom(
            final java.io.InputStream input,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }
    
    public static FeedMessage parseDelimitedFrom(final java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }
    
    public static FeedMessage parseDelimitedFrom(
            final java.io.InputStream input,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    
    public static FeedMessage parseFrom(
            final com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }
    
    public static FeedMessage parseFrom(
            final com.google.protobuf.CodedInputStream input,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }
    
    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    
    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }
    
    public static Builder newBuilder(final FeedMessage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    
    @Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
    }
    
    @java.lang.Override
    protected Builder newBuilderForType(
            final com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        final Builder builder = new Builder(parent);
        return builder;
    }
    
    /**
     * <pre>
     * The contents of a feed message.
     * A feed is a continuous stream of feed messages. Each message in the stream is
     * obtained as a response to an appropriate HTTP GET request.
     * A realtime feed is always defined with relation to an existing GTFS feed.
     * All the entity ids are resolved with respect to the GTFS feed.
     * A feed depends on some external configuration:
     * - The corresponding GTFS feed.
     * - Feed application (updates, positions or alerts). A feed should contain only
     *   items of one specified application; all the other entities will be ignored.
     * - Polling frequency
     * </pre>
     * <p>
     * Protobuf type {@code transit_realtime.FeedMessage}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:transit_realtime.FeedMessage)
            FeedMessageOrBuilder {
        
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return GtfsRealtime.internal_static_transit_realtime_FeedMessage_descriptor;
        }
        
        @Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return GtfsRealtime.internal_static_transit_realtime_FeedMessage_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            FeedMessage.class, FeedMessage.Builder.class);
        }
        
        // Construct using sen.khyber.subway.client.proto.FeedMessage.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }
        
        private Builder(
                final com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
                getHeaderFieldBuilder();
                getEntityFieldBuilder();
            }
        }
        
        @Override
        public Builder clear() {
            super.clear();
            if (headerBuilder_ == null) {
                header_ = null;
            } else {
                headerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            if (entityBuilder_ == null) {
                entity_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
            } else {
                entityBuilder_.clear();
            }
            return this;
        }
        
        @Override
        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return GtfsRealtime.internal_static_transit_realtime_FeedMessage_descriptor;
        }
        
        @Override
        public FeedMessage getDefaultInstanceForType() {
            return FeedMessage.getDefaultInstance();
        }
        
        @Override
        public FeedMessage build() {
            final FeedMessage result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }
        
        @Override
        public FeedMessage buildPartial() {
            final FeedMessage result = new FeedMessage(this);
            final int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                to_bitField0_ |= 0x00000001;
            }
            if (headerBuilder_ == null) {
                result.header_ = header_;
            } else {
                result.header_ = headerBuilder_.build();
            }
            if (entityBuilder_ == null) {
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    entity_ = java.util.Collections.unmodifiableList(entity_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.entity_ = entity_;
            } else {
                result.entity_ = entityBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
        }
        
        @Override
        public Builder clone() {
            return (Builder) super.clone();
        }
        
        @Override
        public Builder setField(
                final com.google.protobuf.Descriptors.FieldDescriptor field,
                final java.lang.Object value) {
            return (Builder) super.setField(field, value);
        }
        
        @Override
        public Builder clearField(
                final com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
        }
        
        @Override
        public Builder clearOneof(
                final com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
        }
        
        @Override
        public Builder setRepeatedField(
                final com.google.protobuf.Descriptors.FieldDescriptor field,
                final int index, final java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
        }
        
        @Override
        public Builder addRepeatedField(
                final com.google.protobuf.Descriptors.FieldDescriptor field,
                final java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
        }
        
        @Override
        public Builder mergeFrom(final com.google.protobuf.Message other) {
            if (other instanceof FeedMessage) {
                return mergeFrom((FeedMessage) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }
        
        public Builder mergeFrom(final FeedMessage other) {
            if (other == FeedMessage.getDefaultInstance()) {return this;}
            if (other.hasHeader()) {
                mergeHeader(other.getHeader());
            }
            if (entityBuilder_ == null) {
                if (!other.entity_.isEmpty()) {
                    if (entity_.isEmpty()) {
                        entity_ = other.entity_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureEntityIsMutable();
                        entity_.addAll(other.entity_);
                    }
                    onChanged();
                }
            } else {
                if (!other.entity_.isEmpty()) {
                    if (entityBuilder_.isEmpty()) {
                        entityBuilder_.dispose();
                        entityBuilder_ = null;
                        entity_ = other.entity_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                        entityBuilder_ =
                                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                        getEntityFieldBuilder() : null;
                    } else {
                        entityBuilder_.addAllMessages(other.entity_);
                    }
                }
            }
            mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
        }
        
        @Override
        public final boolean isInitialized() {
            if (!hasHeader()) {
                return false;
            }
            if (!getHeader().isInitialized()) {
                return false;
            }
            for (int i = 0; i < getEntityCount(); i++) {
                if (!getEntity(i).isInitialized()) {
                    return false;
                }
            }
            return true;
        }
        
        @Override
        public Builder mergeFrom(
                final com.google.protobuf.CodedInputStream input,
                final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            FeedMessage parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (final com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (FeedMessage) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }
        
        private int bitField0_;
        
        private FeedHeader header_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
                FeedHeader, FeedHeader.Builder, FeedHeaderOrBuilder> headerBuilder_;
        
        /**
         * <pre>
         * Metadata about this feed and feed message.
         * </pre>
         * <p>
         * <code>required .transit_realtime.FeedHeader header = 1;</code>
         */
        @Override
        public boolean hasHeader() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        
        /**
         * <pre>
         * Metadata about this feed and feed message.
         * </pre>
         * <p>
         * <code>required .transit_realtime.FeedHeader header = 1;</code>
         */
        @Override
        public FeedHeader getHeader() {
            if (headerBuilder_ == null) {
                return header_ == null ? FeedHeader.getDefaultInstance() : header_;
            } else {
                return headerBuilder_.getMessage();
            }
        }
        
        /**
         * <pre>
         * Metadata about this feed and feed message.
         * </pre>
         * <p>
         * <code>required .transit_realtime.FeedHeader header = 1;</code>
         */
        public Builder setHeader(final FeedHeader value) {
            if (headerBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                header_ = value;
                onChanged();
            } else {
                headerBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000001;
            return this;
        }
        
        /**
         * <pre>
         * Metadata about this feed and feed message.
         * </pre>
         * <p>
         * <code>required .transit_realtime.FeedHeader header = 1;</code>
         */
        public Builder setHeader(
                final FeedHeader.Builder builderForValue) {
            if (headerBuilder_ == null) {
                header_ = builderForValue.build();
                onChanged();
            } else {
                headerBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000001;
            return this;
        }
        
        /**
         * <pre>
         * Metadata about this feed and feed message.
         * </pre>
         * <p>
         * <code>required .transit_realtime.FeedHeader header = 1;</code>
         */
        public Builder mergeHeader(final FeedHeader value) {
            if (headerBuilder_ == null) {
                if (((bitField0_ & 0x00000001) == 0x00000001) &&
                        header_ != null &&
                        header_ != FeedHeader.getDefaultInstance()) {
                    header_ =
                            FeedHeader.newBuilder(header_).mergeFrom(value).buildPartial();
                } else {
                    header_ = value;
                }
                onChanged();
            } else {
                headerBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000001;
            return this;
        }
        
        /**
         * <pre>
         * Metadata about this feed and feed message.
         * </pre>
         * <p>
         * <code>required .transit_realtime.FeedHeader header = 1;</code>
         */
        public Builder clearHeader() {
            if (headerBuilder_ == null) {
                header_ = null;
                onChanged();
            } else {
                headerBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
        }
        
        /**
         * <pre>
         * Metadata about this feed and feed message.
         * </pre>
         * <p>
         * <code>required .transit_realtime.FeedHeader header = 1;</code>
         */
        public FeedHeader.Builder getHeaderBuilder() {
            bitField0_ |= 0x00000001;
            onChanged();
            return getHeaderFieldBuilder().getBuilder();
        }
        
        /**
         * <pre>
         * Metadata about this feed and feed message.
         * </pre>
         * <p>
         * <code>required .transit_realtime.FeedHeader header = 1;</code>
         */
        @Override
        public FeedHeaderOrBuilder getHeaderOrBuilder() {
            if (headerBuilder_ != null) {
                return headerBuilder_.getMessageOrBuilder();
            } else {
                return header_ == null ?
                        FeedHeader.getDefaultInstance() : header_;
            }
        }
        
        /**
         * <pre>
         * Metadata about this feed and feed message.
         * </pre>
         * <p>
         * <code>required .transit_realtime.FeedHeader header = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                FeedHeader, FeedHeader.Builder, FeedHeaderOrBuilder>
        getHeaderFieldBuilder() {
            if (headerBuilder_ == null) {
                headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<>(
                        getHeader(),
                        getParentForChildren(),
                        isClean());
                header_ = null;
            }
            return headerBuilder_;
        }
        
        private java.util.List<FeedEntity> entity_ =
                java.util.Collections.emptyList();
        
        private void ensureEntityIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                entity_ = new java.util.ArrayList<>(entity_);
                bitField0_ |= 0x00000002;
            }
        }
        
        private com.google.protobuf.RepeatedFieldBuilderV3<
                FeedEntity, FeedEntity.Builder, FeedEntityOrBuilder> entityBuilder_;
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        @Override
        public java.util.List<FeedEntity> getEntityList() {
            if (entityBuilder_ == null) {
                return java.util.Collections.unmodifiableList(entity_);
            } else {
                return entityBuilder_.getMessageList();
            }
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        @Override
        public int getEntityCount() {
            if (entityBuilder_ == null) {
                return entity_.size();
            } else {
                return entityBuilder_.getCount();
            }
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        @Override
        public FeedEntity getEntity(final int index) {
            if (entityBuilder_ == null) {
                return entity_.get(index);
            } else {
                return entityBuilder_.getMessage(index);
            }
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public Builder setEntity(
                final int index, final FeedEntity value) {
            if (entityBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureEntityIsMutable();
                entity_.set(index, value);
                onChanged();
            } else {
                entityBuilder_.setMessage(index, value);
            }
            return this;
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public Builder setEntity(
                final int index, final FeedEntity.Builder builderForValue) {
            if (entityBuilder_ == null) {
                ensureEntityIsMutable();
                entity_.set(index, builderForValue.build());
                onChanged();
            } else {
                entityBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public Builder addEntity(final FeedEntity value) {
            if (entityBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureEntityIsMutable();
                entity_.add(value);
                onChanged();
            } else {
                entityBuilder_.addMessage(value);
            }
            return this;
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public Builder addEntity(
                final int index, final FeedEntity value) {
            if (entityBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureEntityIsMutable();
                entity_.add(index, value);
                onChanged();
            } else {
                entityBuilder_.addMessage(index, value);
            }
            return this;
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public Builder addEntity(
                final FeedEntity.Builder builderForValue) {
            if (entityBuilder_ == null) {
                ensureEntityIsMutable();
                entity_.add(builderForValue.build());
                onChanged();
            } else {
                entityBuilder_.addMessage(builderForValue.build());
            }
            return this;
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public Builder addEntity(
                final int index, final FeedEntity.Builder builderForValue) {
            if (entityBuilder_ == null) {
                ensureEntityIsMutable();
                entity_.add(index, builderForValue.build());
                onChanged();
            } else {
                entityBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public Builder addAllEntity(
                final java.lang.Iterable<? extends FeedEntity> values) {
            if (entityBuilder_ == null) {
                ensureEntityIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, entity_);
                onChanged();
            } else {
                entityBuilder_.addAllMessages(values);
            }
            return this;
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public Builder clearEntity() {
            if (entityBuilder_ == null) {
                entity_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
            } else {
                entityBuilder_.clear();
            }
            return this;
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public Builder removeEntity(final int index) {
            if (entityBuilder_ == null) {
                ensureEntityIsMutable();
                entity_.remove(index);
                onChanged();
            } else {
                entityBuilder_.remove(index);
            }
            return this;
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public FeedEntity.Builder getEntityBuilder(
                final int index) {
            return getEntityFieldBuilder().getBuilder(index);
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        @Override
        public FeedEntityOrBuilder getEntityOrBuilder(
                final int index) {
            if (entityBuilder_ == null) {
                return entity_.get(index);
            } else {
                return entityBuilder_.getMessageOrBuilder(index);
            }
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        @Override
        public java.util.List<? extends FeedEntityOrBuilder>
        getEntityOrBuilderList() {
            if (entityBuilder_ != null) {
                return entityBuilder_.getMessageOrBuilderList();
            } else {
                return java.util.Collections.unmodifiableList(entity_);
            }
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public FeedEntity.Builder addEntityBuilder() {
            return getEntityFieldBuilder().addBuilder(
                    FeedEntity.getDefaultInstance());
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public FeedEntity.Builder addEntityBuilder(
                final int index) {
            return getEntityFieldBuilder().addBuilder(
                    index, FeedEntity.getDefaultInstance());
        }
        
        /**
         * <pre>
         * Contents of the feed.
         * </pre>
         * <p>
         * <code>repeated .transit_realtime.FeedEntity entity = 2;</code>
         */
        public java.util.List<FeedEntity.Builder>
        getEntityBuilderList() {
            return getEntityFieldBuilder().getBuilderList();
        }
        
        private com.google.protobuf.RepeatedFieldBuilderV3<
                FeedEntity, FeedEntity.Builder, FeedEntityOrBuilder>
        getEntityFieldBuilder() {
            if (entityBuilder_ == null) {
                entityBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<>(
                        entity_,
                        ((bitField0_ & 0x00000002) == 0x00000002),
                        getParentForChildren(),
                        isClean());
                entity_ = null;
            }
            return entityBuilder_;
        }
        
        @Override
        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }
        
        @Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }
        
        
        // @@protoc_insertion_point(builder_scope:transit_realtime.FeedMessage)
    }
    
    // @@protoc_insertion_point(class_scope:transit_realtime.FeedMessage)
    private static final FeedMessage DEFAULT_INSTANCE;
    
    static {
        DEFAULT_INSTANCE = new FeedMessage();
    }
    
    public static FeedMessage getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }
    
    @java.lang.Deprecated public static final com.google.protobuf.Parser<FeedMessage>
            PARSER = new com.google.protobuf.AbstractParser<>() {
        
        @Override
        public FeedMessage parsePartialFrom(
                final com.google.protobuf.CodedInputStream input,
                final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new FeedMessage(input, extensionRegistry);
        }
    };
    
    public static com.google.protobuf.Parser<FeedMessage> parser() {
        return PARSER;
    }
    
    @java.lang.Override
    public com.google.protobuf.Parser<FeedMessage> getParserForType() {
        return PARSER;
    }
    
    @Override
    public FeedMessage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }
    
}

