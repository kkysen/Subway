// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gtfs-realtime.proto

package sen.khyber.web.subway.client.proto;

/**
 * <pre>
 * A time interval. The interval is considered active at time 't' if 't' is
 * greater than or equal to the start time and less than the end time.
 * </pre>
 * <p>
 * Protobuf type {@code transit_realtime.TimeRange}
 */
public final class TimeRange extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:transit_realtime.TimeRange)
        TimeRangeOrBuilder {
    
    private static final long serialVersionUID = 0L;
    
    // Use TimeRange.newBuilder() to construct.
    private TimeRange(final com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }
    
    private TimeRange() {
        start_ = 0L;
        end_ = 0L;
    }
    
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
        return unknownFields;
    }
    
    private TimeRange(
            final com.google.protobuf.CodedInputStream input,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        final int mutable_bitField0_ = 0;
        final com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
            boolean done = false;
            while (!done) {
                final int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    default: {
                        if (!parseUnknownField(
                                input, unknownFields, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                    case 8: {
                        bitField0_ |= 0x00000001;
                        start_ = input.readUInt64();
                        break;
                    }
                    case 16: {
                        bitField0_ |= 0x00000002;
                        end_ = input.readUInt64();
                        break;
                    }
                }
            }
        } catch (final com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (final java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
        } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
        }
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
        return GtfsRealtime.internal_static_transit_realtime_TimeRange_descriptor;
    }
    
    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
        return GtfsRealtime.internal_static_transit_realtime_TimeRange_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        TimeRange.class, TimeRange.Builder.class);
    }
    
    private int bitField0_;
    public static final int START_FIELD_NUMBER = 1;
    private long start_;
    
    /**
     * <pre>
     * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
     * 00:00:00 UTC).
     * If missing, the interval starts at minus infinity.
     * </pre>
     * <p>
     * <code>optional uint64 start = 1;</code>
     */
    @Override
    public boolean hasStart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    
    /**
     * <pre>
     * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
     * 00:00:00 UTC).
     * If missing, the interval starts at minus infinity.
     * </pre>
     * <p>
     * <code>optional uint64 start = 1;</code>
     */
    @Override
    public long getStart() {
        return start_;
    }
    
    public static final int END_FIELD_NUMBER = 2;
    private long end_;
    
    /**
     * <pre>
     * End time, in POSIX time (i.e., number of seconds since January 1st 1970
     * 00:00:00 UTC).
     * If missing, the interval ends at plus infinity.
     * </pre>
     * <p>
     * <code>optional uint64 end = 2;</code>
     */
    @Override
    public boolean hasEnd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    
    /**
     * <pre>
     * End time, in POSIX time (i.e., number of seconds since January 1st 1970
     * 00:00:00 UTC).
     * If missing, the interval ends at plus infinity.
     * </pre>
     * <p>
     * <code>optional uint64 end = 2;</code>
     */
    @Override
    public long getEnd() {
        return end_;
    }
    
    private byte memoizedIsInitialized = -1;
    
    @Override
    public final boolean isInitialized() {
        final byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) {return true;}
        if (isInitialized == 0) {return false;}
        
        memoizedIsInitialized = 1;
        return true;
    }
    
    @Override
    public void writeTo(final com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt64(1, start_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt64(2, end_);
        }
        unknownFields.writeTo(output);
    }
    
    @Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) {return size;}
        
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeUInt64Size(1, start_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
                    .computeUInt64Size(2, end_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
    }
    
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof TimeRange)) {
            return super.equals(obj);
        }
        final TimeRange other = (TimeRange) obj;
        
        boolean result = true;
        result = result && (hasStart() == other.hasStart());
        if (hasStart()) {
            result = result && (getStart()
                    == other.getStart());
        }
        result = result && (hasEnd() == other.hasEnd());
        if (hasEnd()) {
            result = result && (getEnd()
                    == other.getEnd());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
    }
    
    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasStart()) {
            hash = (37 * hash) + START_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getStart());
        }
        if (hasEnd()) {
            hash = (37 * hash) + END_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getEnd());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }
    
    public static TimeRange parseFrom(
            final java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }
    
    public static TimeRange parseFrom(
            final java.nio.ByteBuffer data,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }
    
    public static TimeRange parseFrom(
            final com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }
    
    public static TimeRange parseFrom(
            final com.google.protobuf.ByteString data,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }
    
    public static TimeRange parseFrom(final byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }
    
    public static TimeRange parseFrom(
            final byte[] data,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }
    
    public static TimeRange parseFrom(final java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }
    
    public static TimeRange parseFrom(
            final java.io.InputStream input,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }
    
    public static TimeRange parseDelimitedFrom(final java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }
    
    public static TimeRange parseDelimitedFrom(
            final java.io.InputStream input,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    
    public static TimeRange parseFrom(
            final com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }
    
    public static TimeRange parseFrom(
            final com.google.protobuf.CodedInputStream input,
            final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }
    
    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    
    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }
    
    public static Builder newBuilder(final TimeRange prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    
    @Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
    }
    
    @java.lang.Override
    protected Builder newBuilderForType(
            final com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        final Builder builder = new Builder(parent);
        return builder;
    }
    
    /**
     * <pre>
     * A time interval. The interval is considered active at time 't' if 't' is
     * greater than or equal to the start time and less than the end time.
     * </pre>
     * <p>
     * Protobuf type {@code transit_realtime.TimeRange}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:transit_realtime.TimeRange)
            TimeRangeOrBuilder {
        
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return GtfsRealtime.internal_static_transit_realtime_TimeRange_descriptor;
        }
        
        @Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return GtfsRealtime.internal_static_transit_realtime_TimeRange_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            TimeRange.class, TimeRange.Builder.class);
        }
        
        // Construct using sen.khyber.subway.client.proto.TimeRange.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }
        
        private Builder(
                final com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
        }
        
        @Override
        public Builder clear() {
            super.clear();
            start_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000001);
            end_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
        }
        
        @Override
        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return GtfsRealtime.internal_static_transit_realtime_TimeRange_descriptor;
        }
        
        @Override
        public TimeRange getDefaultInstanceForType() {
            return TimeRange.getDefaultInstance();
        }
        
        @Override
        public TimeRange build() {
            final TimeRange result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }
        
        @Override
        public TimeRange buildPartial() {
            final TimeRange result = new TimeRange(this);
            final int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                to_bitField0_ |= 0x00000001;
            }
            result.start_ = start_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                to_bitField0_ |= 0x00000002;
            }
            result.end_ = end_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
        }
        
        @Override
        public Builder clone() {
            return (Builder) super.clone();
        }
        
        @Override
        public Builder setField(
                final com.google.protobuf.Descriptors.FieldDescriptor field,
                final java.lang.Object value) {
            return (Builder) super.setField(field, value);
        }
        
        @Override
        public Builder clearField(
                final com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
        }
        
        @Override
        public Builder clearOneof(
                final com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
        }
        
        @Override
        public Builder setRepeatedField(
                final com.google.protobuf.Descriptors.FieldDescriptor field,
                final int index, final java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
        }
        
        @Override
        public Builder addRepeatedField(
                final com.google.protobuf.Descriptors.FieldDescriptor field,
                final java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
        }
        
        @Override
        public Builder mergeFrom(final com.google.protobuf.Message other) {
            if (other instanceof TimeRange) {
                return mergeFrom((TimeRange) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }
        
        public Builder mergeFrom(final TimeRange other) {
            if (other == TimeRange.getDefaultInstance()) {return this;}
            if (other.hasStart()) {
                setStart(other.getStart());
            }
            if (other.hasEnd()) {
                setEnd(other.getEnd());
            }
            mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
        }
        
        @Override
        public final boolean isInitialized() {
            return true;
        }
        
        @Override
        public Builder mergeFrom(
                final com.google.protobuf.CodedInputStream input,
                final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            TimeRange parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (final com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (TimeRange) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }
        
        private int bitField0_;
        
        private long start_;
        
        /**
         * <pre>
         * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
         * 00:00:00 UTC).
         * If missing, the interval starts at minus infinity.
         * </pre>
         * <p>
         * <code>optional uint64 start = 1;</code>
         */
        @Override
        public boolean hasStart() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        
        /**
         * <pre>
         * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
         * 00:00:00 UTC).
         * If missing, the interval starts at minus infinity.
         * </pre>
         * <p>
         * <code>optional uint64 start = 1;</code>
         */
        @Override
        public long getStart() {
            return start_;
        }
        
        /**
         * <pre>
         * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
         * 00:00:00 UTC).
         * If missing, the interval starts at minus infinity.
         * </pre>
         * <p>
         * <code>optional uint64 start = 1;</code>
         */
        public Builder setStart(final long value) {
            bitField0_ |= 0x00000001;
            start_ = value;
            onChanged();
            return this;
        }
        
        /**
         * <pre>
         * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
         * 00:00:00 UTC).
         * If missing, the interval starts at minus infinity.
         * </pre>
         * <p>
         * <code>optional uint64 start = 1;</code>
         */
        public Builder clearStart() {
            bitField0_ = (bitField0_ & ~0x00000001);
            start_ = 0L;
            onChanged();
            return this;
        }
        
        private long end_;
        
        /**
         * <pre>
         * End time, in POSIX time (i.e., number of seconds since January 1st 1970
         * 00:00:00 UTC).
         * If missing, the interval ends at plus infinity.
         * </pre>
         * <p>
         * <code>optional uint64 end = 2;</code>
         */
        @Override
        public boolean hasEnd() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        
        /**
         * <pre>
         * End time, in POSIX time (i.e., number of seconds since January 1st 1970
         * 00:00:00 UTC).
         * If missing, the interval ends at plus infinity.
         * </pre>
         * <p>
         * <code>optional uint64 end = 2;</code>
         */
        @Override
        public long getEnd() {
            return end_;
        }
        
        /**
         * <pre>
         * End time, in POSIX time (i.e., number of seconds since January 1st 1970
         * 00:00:00 UTC).
         * If missing, the interval ends at plus infinity.
         * </pre>
         * <p>
         * <code>optional uint64 end = 2;</code>
         */
        public Builder setEnd(final long value) {
            bitField0_ |= 0x00000002;
            end_ = value;
            onChanged();
            return this;
        }
        
        /**
         * <pre>
         * End time, in POSIX time (i.e., number of seconds since January 1st 1970
         * 00:00:00 UTC).
         * If missing, the interval ends at plus infinity.
         * </pre>
         * <p>
         * <code>optional uint64 end = 2;</code>
         */
        public Builder clearEnd() {
            bitField0_ = (bitField0_ & ~0x00000002);
            end_ = 0L;
            onChanged();
            return this;
        }
        
        @Override
        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }
        
        @Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }
        
        
        // @@protoc_insertion_point(builder_scope:transit_realtime.TimeRange)
    }
    
    // @@protoc_insertion_point(class_scope:transit_realtime.TimeRange)
    private static final TimeRange DEFAULT_INSTANCE;
    
    static {
        DEFAULT_INSTANCE = new TimeRange();
    }
    
    public static TimeRange getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }
    
    @java.lang.Deprecated public static final com.google.protobuf.Parser<TimeRange>
            PARSER = new com.google.protobuf.AbstractParser<>() {
        
        @Override
        public TimeRange parsePartialFrom(
                final com.google.protobuf.CodedInputStream input,
                final com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new TimeRange(input, extensionRegistry);
        }
    };
    
    public static com.google.protobuf.Parser<TimeRange> parser() {
        return PARSER;
    }
    
    @java.lang.Override
    public com.google.protobuf.Parser<TimeRange> getParserForType() {
        return PARSER;
    }
    
    @Override
    public TimeRange getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }
    
}

